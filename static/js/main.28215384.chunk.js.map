{"version":3,"sources":["Home.js","PokemonList.js","Pokemon-Context.js","PokemonDetail.js","MyPokemonList.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Container","fluid","className","Row","Col","sm","size","offset","md","lg","draggable","src","alt","Jumbotron","process","xl","to","Button","color","Component","MyPokemonList","props","state","pokemon","fetch","then","res","json","parsedJSON","results","map","data","name","url","thumbnail","setState","catch","error","console","log","this","length","item","urlDetail","xs","Card","CardImg","top","title","CardBody","CardTitle","tag","CardFooter","outline","PokemonContext","createContext","PokemonProvider","updatepokemon","newpokemon","concat","releasepokemon","filteredPokemon","filter","Provider","value","children","React","PokemonConsumer","Consumer","PokemonDetail","pokemon_details","pokemon_name","window","location","href","split","id","onClick","event","nickname","Math","random","prompt","alert","body","CardText","stats","stat","types","type","held_items","item_hi","moves","move","MyPokemon","Fragment","CardSubtitle","Main","document","style","background","backgroundSize","backgroundPosition","backgroundAttachment","backgroundRepeat","width","exact","path","component","PokemonList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","App","getElementById"],"mappings":"oTAoDeA,E,4JAzCX,WACI,OACI,cAACC,EAAA,EAAD,CAAWC,OAAO,EAAMC,UAAU,OAAlC,SACI,eAACF,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAKE,GAAI,CAAEH,KAAM,EAAGC,OAAQ,GAApF,SACI,qBAAKG,UAAU,QAAQC,IAAI,YAAYT,UAAU,QAAQU,IAAK,wDAGtE,cAACT,EAAA,EAAD,CAAKD,UAAU,mBAAf,SACI,cAACE,EAAA,EAAD,UACI,eAACS,EAAA,EAAD,WACI,oBAAIX,UAAU,uBAAd,gCACA,qBAAIA,UAAU,kBAAd,+BACsB,uBADtB,wCAIA,oBAAGA,UAAU,aAAb,wBAAsCY,0BAIlD,eAACX,EAAA,EAAD,CAAKD,UAAU,8BAAf,UACI,cAACE,EAAA,EAAD,CAAKI,GAAI,CAAEF,KAAM,GAAKS,GAAI,CAAET,KAAM,KAClC,cAACF,EAAA,EAAD,UACI,cAAC,IAAD,CAAMY,GAAG,gBAAT,SACI,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUhB,UAAU,QAAlC,8BAGR,cAACE,EAAA,EAAD,UACI,cAAC,IAAD,CAAMY,GAAG,mBAAT,SACI,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUhB,UAAU,QAAlC,4BAGR,cAACE,EAAA,EAAD,CAAKI,GAAI,CAAEF,KAAM,GAAKS,GAAI,CAAET,KAAM,iB,GAlCvCa,a,wCCoEJC,E,kDA9DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,QAAS,IAHE,E,qDAOnB,WAAqB,IAAD,OAChBC,MAAM,wDACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAU,OAAIA,EAAWC,QAAQC,KAAI,SAAAC,GAAI,MAC3C,CACIC,KAAK,GAAD,OAAKD,EAAKC,MACdC,IAAI,GAAD,OAAKF,EAAKE,KACbC,UAAU,GAAD,OAAKH,EAAKC,KAAV,eAIhBP,MAAK,SAAAF,GAAO,OAAI,EAAKY,SAAS,CAAEZ,eAChCa,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,iBAAkBF,Q,oBAGtD,WACI,IAAQd,EAAYiB,KAAKlB,MAAjBC,QAER,OADAe,QAAQC,IAAIhB,GAER,cAACvB,EAAA,EAAD,CAAWC,OAAO,EAAMC,UAAU,OAAlC,SACI,eAACF,EAAA,EAAD,CAAWE,UAAU,cAArB,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAKE,GAAI,CAAEH,KAAM,EAAGC,OAAQ,GAApF,SACI,oBAAIL,UAAU,mCAAd,8BAGR,cAACC,EAAA,EAAD,CAAKD,UAAU,OAAf,SAEQqB,EAAQkB,OAAS,EAAIlB,EAAQO,KAAI,SAAAY,GAC7B,IAAQV,EAAoBU,EAApBV,KAAME,EAAcQ,EAAdR,UACVS,EAAY,WAAaX,EAC7B,OACI,cAAC5B,EAAA,EAAD,CAAKwC,GAAI,CAAEtC,KAAM,GAAKD,GAAI,CAAEC,KAAM,GAAKG,GAAI,CAAEH,KAAM,GAAKS,GAAI,CAAET,KAAM,GAAKJ,UAAU,OAAnF,SACI,eAAC2C,EAAA,EAAD,CAAM3C,UAAU,QAAhB,UACI,cAAC4C,EAAA,EAAD,CAASpC,UAAU,QAAQqC,KAAG,EAACpC,IAAK,WAAauB,EAAWc,MAAO,aAAehB,EAAf,gDAA2DpB,IAAK,aAAeoB,EAAf,gDAA2D9B,UAAU,cACxM,cAAC+C,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAWhD,UAAU,8BAA8BiD,IAAI,KAAvD,SAA6DnB,MAEjE,cAACoB,EAAA,EAAD,UACI,cAAC,IAAD,CAAoBpC,GAAI2B,EAAxB,SACI,cAAC1B,EAAA,EAAD,CAAQoC,SAAO,EAACnD,UAAU,QAAQgB,MAAM,UAAxC,mBADUc,aAO7B,gB,GAtDLb,aCbtBmC,EAAiBC,0BAEVC,EAAb,4MACEC,cAAgB,SAAAC,GACd,EAAKvB,SAAS,CAAEZ,QAAS,EAAKD,MAAMC,QAAQoC,OAAOD,MAFvD,EAKEE,eAAiB,SAAA5B,GACf,IAAI6B,EAAkB,EAAKvC,MAAMC,QAAQuC,QAAO,SAASvC,GACvD,OAAOS,IAAST,EAAQS,QAE1B,EAAKG,SAAS,CAAEZ,QAASsC,KAT7B,EAYEvC,MAAQ,CACNC,QAAS,GACTkC,cAAe,EAAKA,cACpBG,eAAgB,EAAKA,gBAfzB,4CAkBE,WACE,OACE,cAACN,EAAeS,SAAhB,CAAyBC,MAAOxB,KAAKlB,MAArC,SACGkB,KAAKnB,MAAM4C,eArBpB,GAAqCC,IAAM/C,WA2B9BgD,EAAkBb,EAAec,S,QC0I/BC,E,kDA1JX,WAAYhD,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTgD,gBAAiB,GACjBtC,KAAM,IAJK,E,qDAQnB,WAAqB,IAAD,OAGZuC,EAFMC,OAAOC,SAASC,KACNC,MAAM,KACG,GAE7BnD,MAAM,qCAAuC+C,GACxC9C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA6C,GAAe,OAAI,EAAKnC,SAAS,CACnCmC,kBACAtC,KAAMuC,OAETnC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,iBAAkBF,Q,oBAGtD,WACI,MAAkCG,KAAKlB,MAA/BU,EAAR,EAAQA,KAAMsC,EAAd,EAAcA,gBAWd,OACI,cAACH,EAAD,UACK,gBAAGV,EAAH,EAAGA,cAAH,OACG,cAACzD,EAAA,EAAD,CAAWC,OAAO,EAAMC,UAAU,OAAlC,SACI,eAACF,EAAA,EAAD,CAAW4E,GAAG,gBAAd,UACI,cAACzE,EAAA,EAAD,CAAKD,UAAU,8BAAf,SACI,cAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAKE,GAAI,CAAEF,KAAM,GAAKG,GAAI,CAAEH,KAAM,GAAnD,SACI,cAAC,IAAD,CAAMU,GAAG,gBAAT,SACI,cAACC,EAAA,EAAD,CAAQf,UAAU,QAAQgB,MAAM,UAAhC,gCAIZ,cAACf,EAAA,EAAD,CAAKD,UAAU,8BAAf,SACI,cAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAKE,GAAI,CAAEF,KAAM,GAAKG,GAAI,CAAEH,KAAM,GAAnD,SACI,oBAAIJ,UAAU,2DAAd,SAA0E8B,QAGlF,cAAC7B,EAAA,EAAD,CAAKD,UAAU,8BAAf,SACI,cAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAKE,GAAI,CAAEF,KAAM,GAAKG,GAAI,CAAEH,KAAM,GAAnD,SACI,qBAAKI,UAAU,QAAQR,UAAU,gBAAgBS,IAAK,YAAcqB,EAAO,OAAQgB,MAAO,aAAehB,EAAf,gDAA2DpB,IAAK,aAAeoB,EAAf,sDAGlK,eAAC7B,EAAA,EAAD,CAAKD,UAAU,8BAAf,UACI,cAACE,EAAA,EAAD,CAAKwC,GAAI,CAAEtC,KAAM,GAAKD,GAAI,CAAEC,KAAM,GAAKG,GAAI,CAAEH,KAAM,GAAnD,SACI,eAACW,EAAA,EAAD,CAAQf,UAAU,wBAAwBgB,MAAM,UAAU2D,QAAS,SAAAC,GAC/D,IAAIC,EAjC5BC,KAAKC,UAAY,GACVC,OAAO,cAAgBlD,EAAO,+CAErCmD,MAAM,UAAYnD,EAAO,8BAClB,GA8BqB+C,IACAtB,EAAc,CAAC,CAAEzB,KAAMA,EAAM+C,SAAUA,KACvCI,MAAM,mDAJd,mBAMUnD,OAEd,cAAC5B,EAAA,EAAD,CAAKwC,GAAI,CAAEtC,KAAM,GAAKD,GAAI,CAAEC,KAAM,GAAKG,GAAI,CAAEH,KAAM,GAAnD,SACI,cAAC,IAAD,CAAMU,GAAG,mBAAT,SACI,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUhB,UAAU,QAAlC,+BAIZ,eAACC,EAAA,EAAD,CAAKD,UAAU,OAAf,UACI,cAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAKE,GAAI,CAAEF,KAAM,GAAKG,GAAI,CAAEH,KAAM,GAAKS,GAAI,CAAET,KAAM,GAAKJ,UAAU,OAAnF,SACI,eAAC2C,EAAA,EAAD,CAAMuC,MAAI,EAAV,UACI,cAAClC,EAAA,EAAD,CAAWC,IAAI,KAAf,mBACA,cAACkC,EAAA,EAAD,UACI,6BAEQf,EAAgBgB,MACZhB,EAAgBgB,MAAMxD,KAAI,SAAAY,GACtB,IAAQ6C,EAAS7C,EAAT6C,KACR,OACI,oBAAIrF,UAAU,kBAAd,SAAiDqF,EAAKvD,MAAjBuD,EAAKvD,SAE7C,cAM7B,cAAC5B,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAKE,GAAI,CAAEF,KAAM,GAAKG,GAAI,CAAEH,KAAM,GAAKS,GAAI,CAAET,KAAM,GAAKJ,UAAU,OAAnF,SACI,eAAC2C,EAAA,EAAD,CAAMuC,MAAI,EAAV,UACI,cAAClC,EAAA,EAAD,CAAWC,IAAI,KAAf,mBACA,cAACkC,EAAA,EAAD,UACI,6BAEQf,EAAgBkB,MACZlB,EAAgBkB,MAAM1D,KAAI,SAAAY,GACtB,IAAQ+C,EAAS/C,EAAT+C,KACR,OACI,oBAAIvF,UAAU,kBAAd,SAAiDuF,EAAKzD,MAAjByD,EAAKzD,SAE7C,cAM7B,cAAC5B,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAKE,GAAI,CAAEF,KAAM,GAAKG,GAAI,CAAEH,KAAM,GAAKS,GAAI,CAAET,KAAM,GAAKJ,UAAU,OAAnF,SACI,eAAC2C,EAAA,EAAD,CAAMuC,MAAI,EAAV,UACI,cAAClC,EAAA,EAAD,CAAWC,IAAI,KAAf,wBACA,cAACkC,EAAA,EAAD,UACI,6BAEQf,EAAgBoB,WACZpB,EAAgBoB,WAAW5D,KAAI,SAAA6D,GAC3B,IAAQjD,EAASiD,EAATjD,KACR,OACI,oBAAIxC,UAAU,kBAAd,SAAiDwC,EAAKV,MAAjBU,EAAKV,SAE7C,cAM7B,cAAC5B,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAKE,GAAI,CAAEF,KAAM,GAAKG,GAAI,CAAEH,KAAM,GAAKS,GAAI,CAAET,KAAM,GAAKJ,UAAU,OAAnF,SACI,eAAC2C,EAAA,EAAD,CAAMuC,MAAI,EAAV,UACI,cAAClC,EAAA,EAAD,CAAWC,IAAI,KAAf,mBACA,cAACkC,EAAA,EAAD,UACI,6BAEQf,EAAgBsB,MACZtB,EAAgBsB,MAAM9D,KAAI,SAAAY,GACtB,IAAQmD,EAASnD,EAATmD,KACR,OACI,oBAAI3F,UAAU,kBAAd,SAAiD2F,EAAK7D,MAAjB6D,EAAK7D,SAE7C,6B,GA5IjCb,a,QC+Cb2E,E,4JA5CX,WACI,OACI,cAAC3B,EAAD,UACK,gBAAG5C,EAAH,EAAGA,QAASqC,EAAZ,EAAYA,eAAZ,OACG,cAAC,IAAMmC,SAAP,UACI,cAAC/F,EAAA,EAAD,CAAWC,OAAO,EAAMC,UAAU,OAAlC,SACI,eAACF,EAAA,EAAD,CAAWE,UAAU,cAArB,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAKE,GAAI,CAAEH,KAAM,EAAGC,OAAQ,GAApF,UACI,oBAAIL,UAAU,mCAAd,wBACA,mBAAGA,UAAU,qCAAb,wCAGR,cAACC,EAAA,EAAD,CAAKD,UAAU,OAAf,SAEQqB,EAAQkB,OAAS,EAAIlB,EAAQO,KAAI,SAAAY,GAC7B,IAAQV,EAAmBU,EAAnBV,KAAM+C,EAAarC,EAAbqC,SAEd,OACI,cAAC3E,EAAA,EAAD,CAAKwC,GAAI,CAAEtC,KAAM,GAAKD,GAAI,CAAEC,KAAM,GAAKG,GAAI,CAAEH,KAAM,GAAKS,GAAI,CAAET,KAAM,GAAKJ,UAAU,iBAAnF,SACI,eAAC2C,EAAA,EAAD,CAAM3C,UAAU,QAAhB,UACI,cAAC4C,EAAA,EAAD,CAASpC,UAAU,QAAQqC,KAAG,EAACpC,IAAK,WAAaqB,EAAO,OAAQgB,MAAO,aAAehB,EAAf,gDAA2DpB,IAAK,aAAeoB,EAAf,gDAA2D9B,UAAU,cAC5M,eAAC+C,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWhD,UAAU,8BAA8BiD,IAAI,KAAvD,SAA6D4B,IAC7D,cAACiB,EAAA,EAAD,CAAc7C,IAAI,KAAKjD,UAAU,8BAAjC,SAAgE8B,OAEpE,cAACoB,EAAA,EAAD,UACI,cAACnC,EAAA,EAAD,CAAQoC,SAAO,EAACnD,UAAU,QAAQgB,MAAM,UAAU2D,QAAS,kBAAMjB,EAAe5B,IAAhF,2BAR6FgD,KAAKC,aAajH,qB,GAjCrB9D,aCuCT8E,E,4JA7CX,WAGI,OAFAC,SAASlD,MAAQlC,6CAGb,cAAC,IAAD,UACI,cAAC,EAAD,UACI,sBAAKZ,UAAU,aAAaiG,MAAO,CAACC,WAAY,kFAAmFC,eAAgB,QAASC,mBAAoB,SAAUC,qBAAsB,QAASC,iBAAkB,aAA3O,UACI,qBAAKtG,UAAU,gDAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,eAAC,IAAD,CAASc,GAAG,IAAIN,UAAU,QAAQR,UAAU,eAA5C,UACI,qBAAKQ,UAAU,QAAQC,IAAI,eAAe8F,MAAM,KAAKvG,UAAU,qCAAqCU,IAAK,yDACzG,+BAAOE,yBAEX,wBAAQZ,UAAU,iBAAiBuF,KAAK,SAAS,iBAAe,WAAW,iBAAe,UAAU,gBAAc,SAAS,gBAAc,QAAQ,aAAW,oBAA5J,SACI,sBAAMvF,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2B0E,GAAG,SAA7C,SACI,qBAAI1E,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASc,GAAG,IAAIN,UAAU,QAAQR,UAAU,WAA5C,oBAEJ,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASc,GAAG,gBAAgBN,UAAU,QAAQR,UAAU,WAAxD,4BAEJ,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASc,GAAG,mBAAmBN,UAAU,QAAQR,UAAU,WAA3D,yCAOpB,eAAC,SAAD,WACI,cAAC,QAAD,CAAOwG,OAAK,EAACC,KAAK,IAAIC,UAAW7G,IACjC,cAAC,QAAD,CAAO2G,OAAK,EAACC,KAAK,gBAAgBC,UAAWC,IAC7C,cAAC,QAAD,CAAOF,KAAK,mBAAmBC,UAAWxF,IAC1C,cAAC,QAAD,CAAOuF,KAAK,UAAUC,UAAWvC,kB,GArC1ClD,aCGJ2F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvF,MAAK,YAAkD,IAA/CwF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCEdO,IAASC,OACL,cAAC,IAAD,CAAeC,SAAU1G,GAAzB,SACI,cAAC2G,EAAD,MAEJvB,SAASwB,eAAe,SAG5BZ,M","file":"static/js/main.28215384.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Jumbotron,\r\n} from \"reactstrap\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <Container fluid={true} className=\"py-5\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm={{ size: 8, offset: 2 }} md={{ size: 6, offset: 3 }} lg={{ size: 4, offset: 4 }}>\r\n                            <img draggable=\"false\" src=\"/logo.png\" className=\"w-100\" alt={\"Logo \" + process.env.REACT_APP_TITLE} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"my-5 text-center\">\r\n                        <Col>\r\n                            <Jumbotron>\r\n                                <h1 className=\"display-4 text-light\">Welcome to Pokemon</h1>\r\n                                <h2 className=\"lead text-light\">\r\n                                    Project Assignment<br />\r\n                                    Web Platform Engineers - Tokopedia\r\n                                </h2>\r\n                                <p className=\"text-light\">Created by {process.env.REACT_APP_CREATOR}</p>\r\n                            </Jumbotron>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"my-5 justify-content-center\">\r\n                        <Col md={{ size: 3 }} xl={{ size: 4 }}></Col>\r\n                        <Col>\r\n                            <Link to=\"/pokemon-list\">\r\n                                <Button color=\"primary\" className=\"w-100\">Pokemon List</Button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col>\r\n                            <Link to=\"/my-pokemon-list\">\r\n                                <Button color=\"warning\" className=\"w-100\">My Pokemon</Button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col md={{ size: 3 }} xl={{ size: 4 }}></Col>\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Card,\r\n    CardImg,\r\n    CardBody,\r\n    CardTitle,\r\n    CardFooter,\r\n} from \"reactstrap\";\r\n\r\nclass MyPokemonList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pokemon: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://pokeapi.co/api/v2/pokemon?offset=20&limit=10\")\r\n            .then(res => res.json())\r\n            .then(parsedJSON => parsedJSON.results.map(data => (\r\n                {\r\n                    name: `${data.name}`,\r\n                    url: `${data.url}`,\r\n                    thumbnail: `${data.name}.jpg`\r\n\r\n                }\r\n            )))\r\n            .then(pokemon => this.setState({ pokemon }))\r\n            .catch(error => console.log('parsing failed', error))\r\n    }\r\n\r\n    render() {\r\n        const { pokemon } = this.state;\r\n        console.log(pokemon)\r\n        return (\r\n            <Container fluid={true} className=\"py-5\">\r\n                <Container className=\"pokemonList\">\r\n                    <Row>\r\n                        <Col sm={{ size: 8, offset: 2 }} md={{ size: 6, offset: 3 }} lg={{ size: 4, offset: 4 }}>\r\n                            <h1 className=\"display-4 text-light text-center\">Pokemon List</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"my-5\">\r\n                        {\r\n                            pokemon.length > 0 ? pokemon.map(item => {\r\n                                const { name, thumbnail } = item;\r\n                                let urlDetail = \"/detail/\" + name;\r\n                                return (\r\n                                    <Col xs={{ size: 6 }} sm={{ size: 4 }} lg={{ size: 3 }} xl={{ size: 2 }} className=\"mb-4\">\r\n                                        <Card className=\"h-100\">\r\n                                            <CardImg draggable=\"false\" top src={\"pokemon/\" + thumbnail} title={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} alt={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} className=\"h-100 p-4\" />\r\n                                            <CardBody>\r\n                                                <CardTitle className=\"text-capitalize text-center\" tag=\"h4\">{name}</CardTitle>\r\n                                            </CardBody>\r\n                                            <CardFooter>\r\n                                                <NavLink key={name} to={urlDetail}>\r\n                                                    <Button outline className=\"w-100\" color=\"primary\">View</Button>\r\n                                                </NavLink>\r\n                                            </CardFooter>\r\n                                        </Card>\r\n                                    </Col>\r\n                                );\r\n                            }) : null\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPokemonList;","import React, { createContext } from 'react';\n\nconst PokemonContext = createContext();\n\nexport class PokemonProvider extends React.Component {\n  updatepokemon = newpokemon => {\n    this.setState({ pokemon: this.state.pokemon.concat(newpokemon) });\n  };\n\n  releasepokemon = name => {\n    let filteredPokemon = this.state.pokemon.filter(function(pokemon){\n      return name !== pokemon.name;\n    });\n    this.setState({ pokemon: filteredPokemon });\n  };\n\n  state = {\n    pokemon: [],\n    updatepokemon: this.updatepokemon,\n    releasepokemon: this.releasepokemon\n  };\n\n  render() {\n    return (\n      <PokemonContext.Provider value={this.state}>\n        {this.props.children}\n      </PokemonContext.Provider>\n    );\n  }\n}\n\nexport const PokemonConsumer = PokemonContext.Consumer;\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PokemonConsumer } from './Pokemon-Context';\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Card,\r\n    CardTitle,\r\n    CardText\r\n} from \"reactstrap\";\r\n\r\nclass PokemonDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pokemon_details: [],\r\n            name: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let url = window.location.href;\r\n        let url_split = url.split(\"/\");\r\n        let pokemon_name = url_split[4];\r\n\r\n        fetch(\"https://pokeapi.co/api/v2/pokemon/\" + pokemon_name)\r\n            .then(res => res.json())\r\n            .then(pokemon_details => this.setState({\r\n                pokemon_details,\r\n                name: pokemon_name\r\n            }))\r\n            .catch(error => console.log('parsing failed', error))\r\n    }\r\n\r\n    render() {\r\n        const { name, pokemon_details } = this.state;\r\n\r\n        function catchPokemon() {\r\n            if (Math.random() >= 0.5) {\r\n                return prompt(\"You caught \" + name + \". Please Enter A Nickname For This Pokemon\");\r\n            } else {\r\n                alert(\" Catch \" + name + \" Failed. Please Try Again\");\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <PokemonConsumer>\r\n                {({ updatepokemon }) => (\r\n                    <Container fluid={true} className=\"py-5\">\r\n                        <Container id=\"pokemonDetail\">\r\n                            <Row className=\"justify-content-center mb-4\">\r\n                                <Col sm={{ size: 8 }} md={{ size: 6 }} lg={{ size: 4 }}>\r\n                                    <Link to=\"/pokemon-list\">\r\n                                        <Button className=\"w-100\" color=\"success\">Back to List</Button>\r\n                                    </Link>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"justify-content-center mb-4\">\r\n                                <Col sm={{ size: 8 }} md={{ size: 6 }} lg={{ size: 4 }}>\r\n                                    <h1 className=\"display-4 fw-bold text-light text-center text-capitalize\">{name}</h1>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"justify-content-center mb-4\">\r\n                                <Col sm={{ size: 8 }} md={{ size: 6 }} lg={{ size: 4 }}>\r\n                                    <img draggable=\"false\" className=\"w-100 rounded\" src={\"/pokemon/\" + name + \".jpg\"} title={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} alt={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"justify-content-center mb-4\">\r\n                                <Col xs={{ size: 6 }} sm={{ size: 3 }} lg={{ size: 2 }}>\r\n                                    <Button className=\"w-100 text-capitalize\" color=\"primary\" onClick={event => {\r\n                                        let nickname = catchPokemon();\r\n                                        if (nickname) {\r\n                                            updatepokemon([{ name: name, nickname: nickname }]);\r\n                                            alert(\"Pokemon Successfully Added to My Pokemon List\");\r\n                                        }\r\n                                    }}>Catch {name}</Button>\r\n                                </Col>\r\n                                <Col xs={{ size: 6 }} sm={{ size: 3 }} lg={{ size: 2 }}>\r\n                                    <Link to=\"/my-pokemon-list\">\r\n                                        <Button color=\"warning\" className=\"w-100\">My Pokemon</Button>\r\n                                    </Link>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"my-4\">\r\n                                <Col sm={{ size: 6 }} md={{ size: 4 }} lg={{ size: 3 }} xl={{ size: 3 }} className=\"mb-3\">\r\n                                    <Card body>\r\n                                        <CardTitle tag=\"h5\">Stats</CardTitle>\r\n                                        <CardText>\r\n                                            <ul>\r\n                                                {\r\n                                                    pokemon_details.stats ?\r\n                                                        pokemon_details.stats.map(item => {\r\n                                                            const { stat } = item;\r\n                                                            return (\r\n                                                                <li className=\"text-capitalize\" key={stat.name}>{stat.name}</li>\r\n                                                            );\r\n                                                        }) : null\r\n                                                }\r\n                                            </ul>\r\n                                        </CardText>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col sm={{ size: 6 }} md={{ size: 4 }} lg={{ size: 3 }} xl={{ size: 3 }} className=\"mb-3\">\r\n                                    <Card body>\r\n                                        <CardTitle tag=\"h5\">Types</CardTitle>\r\n                                        <CardText>\r\n                                            <ul>\r\n                                                {\r\n                                                    pokemon_details.types ?\r\n                                                        pokemon_details.types.map(item => {\r\n                                                            const { type } = item;\r\n                                                            return (\r\n                                                                <li className=\"text-capitalize\" key={type.name}>{type.name}</li>\r\n                                                            );\r\n                                                        }) : null\r\n                                                }\r\n                                            </ul>\r\n                                        </CardText>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col sm={{ size: 6 }} md={{ size: 4 }} lg={{ size: 3 }} xl={{ size: 3 }} className=\"mb-3\">\r\n                                    <Card body>\r\n                                        <CardTitle tag=\"h5\">Held Items</CardTitle>\r\n                                        <CardText>\r\n                                            <ul>\r\n                                                {\r\n                                                    pokemon_details.held_items ?\r\n                                                        pokemon_details.held_items.map(item_hi => {\r\n                                                            const { item } = item_hi;\r\n                                                            return (\r\n                                                                <li className=\"text-capitalize\" key={item.name}>{item.name}</li>\r\n                                                            );\r\n                                                        }) : null\r\n                                                }\r\n                                            </ul>\r\n                                        </CardText>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col sm={{ size: 6 }} md={{ size: 4 }} lg={{ size: 3 }} xl={{ size: 3 }} className=\"mb-3\">\r\n                                    <Card body>\r\n                                        <CardTitle tag=\"h5\">Moves</CardTitle>\r\n                                        <CardText>\r\n                                            <ul>\r\n                                                {\r\n                                                    pokemon_details.moves ?\r\n                                                        pokemon_details.moves.map(item => {\r\n                                                            const { move } = item;\r\n                                                            return (\r\n                                                                <li className=\"text-capitalize\" key={move.name}>{move.name}</li>\r\n                                                            );\r\n                                                        }) : null\r\n                                                }\r\n                                            </ul>\r\n                                        </CardText>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Container>\r\n                )}\r\n            </PokemonConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonDetail;","import React, { Component } from \"react\";\r\nimport { PokemonConsumer } from './Pokemon-Context';\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Card,\r\n    CardImg,\r\n    CardBody,\r\n    CardTitle,\r\n    CardSubtitle,\r\n    CardFooter,\r\n} from \"reactstrap\";\r\n\r\nclass MyPokemon extends Component {\r\n    render() {\r\n        return (\r\n            <PokemonConsumer>\r\n                {({ pokemon, releasepokemon }) => (\r\n                    <React.Fragment>\r\n                        <Container fluid={true} className=\"py-5\">\r\n                            <Container className=\"pokemonList\">\r\n                                <Row>\r\n                                    <Col sm={{ size: 8, offset: 2 }} md={{ size: 6, offset: 3 }} lg={{ size: 4, offset: 4 }}>\r\n                                        <h1 className=\"display-4 text-light text-center\">My Pokemon</h1>\r\n                                        <p className=\"h2 fw-light text-light text-center\">List Captured Pokemon</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-5\">\r\n                                    {\r\n                                        pokemon.length > 0 ? pokemon.map(item => {\r\n                                            const { name, nickname } = item;\r\n\r\n                                            return (\r\n                                                <Col xs={{ size: 6 }} sm={{ size: 4 }} lg={{ size: 3 }} xl={{ size: 2 }} className=\"myPokemon mb-4\" key={Math.random()}>\r\n                                                    <Card className=\"h-100\">\r\n                                                        <CardImg draggable=\"false\" top src={\"pokemon/\" + name + \".jpg\"} title={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} alt={\"Pokemon - \" + name + \" - \" + process.env.REACT_APP_TITLE} className=\"h-100 p-4\" />\r\n                                                        <CardBody>\r\n                                                            <CardTitle className=\"text-capitalize text-center\" tag=\"h4\">{nickname}</CardTitle>\r\n                                                            <CardSubtitle tag=\"h6\" className=\"text-capitalize text-center\">{name}</CardSubtitle>\r\n                                                        </CardBody>\r\n                                                        <CardFooter>\r\n                                                            <Button outline className=\"w-100\" color=\"primary\" onClick={() => releasepokemon(name)}>Release</Button>\r\n                                                        </CardFooter>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            );\r\n                                        }) : null\r\n                                    }\r\n                                </Row>\r\n                            </Container>\r\n                        </Container>\r\n                    </React.Fragment>\r\n                )}\r\n            </PokemonConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPokemon;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, NavLink, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\nimport PokemonList from \"./PokemonList\";\r\nimport PokemonDetail from \"./PokemonDetail\";\r\nimport MyPokemonList from \"./MyPokemonList\";\r\nimport { PokemonProvider } from \"./Pokemon-Context\";\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        document.title = process.env.REACT_APP_TITLE\r\n\r\n        return (\r\n            <Router>\r\n                <PokemonProvider>\r\n                    <div className=\"min-vh-100\" style={{background: \"linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('background.webp')\", backgroundSize: \"cover\", backgroundPosition: \"center\", backgroundAttachment: \"fixed\", backgroundRepeat: \"no-repeat\"}}>\r\n                        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger\">\r\n                            <div className=\"container-fluid\">\r\n                                <NavLink to=\"/\" draggable=\"false\" className=\"navbar-brand\">\r\n                                    <img draggable=\"false\" src=\"/favicon.png\" width=\"30\" className=\"d-inline-block align-text-top me-2\" alt={\"Favicon - \" + process.env.REACT_APP_TITLE} />\r\n                                    <span>{process.env.REACT_APP_NAME}</span>\r\n                                </NavLink>\r\n                                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                    <span className=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n                                <div className=\"collapse navbar-collapse\" id=\"navbar\">\r\n                                    <ul className=\"navbar-nav me-auto\">\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink to=\"/\" draggable=\"false\" className=\"nav-link\">Home</NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink to=\"/pokemon-list\" draggable=\"false\" className=\"nav-link\">Pokemon List</NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink to=\"/my-pokemon-list\" draggable=\"false\" className=\"nav-link\">My Pokemon List</NavLink>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </nav>\r\n\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home} />\r\n                            <Route exact path=\"/pokemon-list\" component={PokemonList} />\r\n                            <Route path=\"/my-pokemon-list\" component={MyPokemonList} />\r\n                            <Route path=\"/detail\" component={PokemonDetail} />\r\n                        </Switch>\r\n                    </div>\r\n                </PokemonProvider>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport BrowserRouter from \"react-router-dom/BrowserRouter\"\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"bootstrap/dist/js/bootstrap.min.js\"\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}